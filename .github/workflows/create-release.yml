on:
  push:
#    tags:
#      - '*.*.*'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set tag as environment variable
#        run: echo "CURRENT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        run: echo "CURRENT_TAG=0.0.10" >> $GITHUB_ENV

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Composer Install
        uses: php-actions/composer@v5
        with:
          dev: no
          args: --profile --ignore-platform-reqs
          php_extensions: intl
          php_version: 8.2.12

      - name: Clean Up
        run: |
          sudo rm -rf .github/ .git/ build/ data/ tests/ 
          sudo rm -f .editorconfig .gitignore .travis.yml composer.json composer.lock Makefile phpunit.integration.xml phpunit.xml 

      - name: show file content
        run: |
          pwd
          ls -ltra
          ls -ltra ../

      - name: Create Package
        run: |
          cd ../ && sudo tar -czf vdirsyncerui-${{ env.CURRENT_TAG }}.tar.gz vdirsyncerui

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.CURRENT_TAG }}
          release_name: ${{ env.CURRENT_TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: vdirsyncerui-${{ env.CURRENT_TAG }}.tar.gz
          asset_name: vdirsyncerui-${{ env.CURRENT_TAG }}.tar.gz
          asset_content_type: application/tar

      - name: Nextcloud push app to appstore
        uses: R0Wi/nextcloud-appstore-push-action@v1.0.3
        with:
          app_name: vdirsyncerui
          appstore_token: ${{ secrets.APPSTORE_TOKEN }}
          download_url: ${{ steps.attach_to_release.outputs.browser_download_url }}
          app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
          nightly: false
